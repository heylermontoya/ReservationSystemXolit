// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESERVATION_SYSTEM.Infrastructure.Context;

#nullable disable

namespace RESERVATION_SYSTEM.Infrastructure.Migrations
{
    [DbContext(typeof(PersistenceContext))]
    [Migration("20240902190621_MigracionInicial")]
    partial class MigracionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.customer.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.historyReservation.HistoryReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReservationID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservationID");

                    b.ToTable("HistoryReservation", "dbo");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.reservation.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberPeople")
                        .HasColumnType("int");

                    b.Property<Guid?>("ServiceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Reservation", "dbo");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.service.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Service", "dbo");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.historyReservation.HistoryReservation", b =>
                {
                    b.HasOne("RESERVATION_SYSTEM.Domain.Entities.reservation.Reservation", "Reservation")
                        .WithMany("HistoryReservation")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.reservation.Reservation", b =>
                {
                    b.HasOne("RESERVATION_SYSTEM.Domain.Entities.customer.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RESERVATION_SYSTEM.Domain.Entities.service.Service", "Service")
                        .WithMany("Reservations")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.customer.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.reservation.Reservation", b =>
                {
                    b.Navigation("HistoryReservation");
                });

            modelBuilder.Entity("RESERVATION_SYSTEM.Domain.Entities.service.Service", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
